<?php
namespace model;
require '/autoload.php';
use model\Administrator;
use PDO;
use PHPUnit_Framework_TestCase;
use utils\ShaHashProvider;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-09-06 at 14:56:27.
 */
class AdministratorTest extends PHPUnit_Framework_TestCase
{
    /** @var Administrator */
    protected $_admin;
    protected $_pdo;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->_pdo = $this
            ->getMockBuilder('io\IPdoProvider')
            ->setMethods(array('query', 'exec'))
            ->getMock();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers model\Administrator::create
     */
    public function testcreate()
    {
        // ARRANGE
        $id = NULL;
        $nom = 'toto';
        $login = 'totoadm';
        $password = 'hdsgjdsfghjesdjh=GhZ';
        $email = 'toto@adm.net';
        $expectedParams = array(
            "id" => array( "value" => $id, "type" => PDO::PARAM_INT | PDO::PARAM_INPUT_OUTPUT ),
            "nom" => array( "value" => $nom, "type" => PDO::PARAM_STR ),
            "login" => array( "value" => $login, "type" => PDO::PARAM_STR ),
            "mdp" => array( "value" => $password, "type" => PDO::PARAM_STR ),
            "email" => array( "value" => $email, "type" => PDO::PARAM_STR )
        );
        $this->_pdo
            ->expects($this->once())
            ->method('exec')
            ->with(
                    $this->equalTo('create_admin'),
                    $this->equalTo($expectedParams)
            );
        $this->_admin = new Administrator($this->_pdo, $login, $password, $nom, $email);
        // ACT
        $this->_admin->create();
    }

    /**
     * @covers model\Administrator::delete
     */
    public function testDelete()
    {
        // ARRANGE
        $login ='toto';
        $password = (new ShaHashProvider())->hash('toto1234');
        $mockedAdmin = $this->getMockBuilder('model\Administrator')
                ->setConstructorArgs(array($this->_pdo, $login, $password))
                ->setMethods(NULL)
                ->getMock();
        
        $mockedAdmin->id = 4;
        
        $expectedParams = array(
          "id" => array( "value" => 4, "type" => PDO::PARAM_INT )  
        );
                
        $this->_pdo
            ->expects($this->once())
            ->method('exec')
            ->with(
                $this->equalTo('delete_admin'),
                $this->equalTo($expectedParams)
            );
        // ACT
        $mockedAdmin->delete();
        
    }
}
